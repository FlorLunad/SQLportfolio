
-- cantidad de cursos y carreras del area data

SELECT COUNT(tipo) AS cantidad, Tipo
FROM Asignaturas
WHERE area=5
GROUP BY Tipo;

-- nombre, dni y telefono de estudiantes que sean agronomos de profesion y hayan nacido entre 1970-2000

SELECT * 
FROM Estudiantes
WHERE profesion = 6 AND [Fecha de Nacimiento] BETWEEN '1970-01-01' AND '2020-12-31';

/* listado de los docentes que ingresaron en el año 2021 y concatenando nombre y apellido, utilizando separador '-'
Se renombra la nueva columna como Nombres_Apellidos y los resultados se mostraran en mayusculas.*/

SELECT UPPER(CONCAT(nombre, '-' + apellido)) AS nombres_apellidos
FROM Staff
WHERE [Fecha Ingreso] LIKE '%2021%';

-- Cantidad de encargados de docentes y de tutores. Se renombra la columna como CantEncargados y se saca la palabra 'Encargado' en cada uno de los registros. Se renombra la columna como NuevoTipo. */

SELECT COUNT(Encargado_ID) AS cantEncargados, REPLACE(tipo, 'encargado', '') AS nuevoTipo
FROM Encargado
GROUP  BY tipo;

/* Precio promedio de las carreras y los cursos por jornada. Nueva columna: Promedio. Ordenados de mayor a menor.*/

SELECT AVG(costo) AS promedio, Jornada, Tipo
FROM Asignaturas
GROUP BY Jornada, Tipo
ORDER BY promedio;

/* Se calcula la edad de los estudiantes en una nueva columna renombrada como Edad. Se muestran solo los que son mayores de 18 años, de menor a mayores.*/

SELECT estudiantesid, nombre, apellido, DATEDIFF(YEAR, [Fecha de Nacimiento], '2023-05-29') as Edad
FROM Estudiantes
WHERE DATEDIFF(YEAR, [Fecha de Nacimiento], '2023-05-29') > 18
ORDER BY DATEDIFF(YEAR, [Fecha de Nacimiento], '2023-05-29');

--Nombre, correo, camada y la fecha de ingreso de personas del staff que contienen correo '.edu' y su DocenteID es mayor o igual que 100. 

SELECT nombre, apellido, correo, camada, [fecha ingreso]
FROM Staff
WHERE correo LIKE '%.edu%' AND DocentesID >= 100;

-- Documento, domicilio, código postal y nombre de los primeros estudiantes que se registraron en la plataforma. 

SELECT TOP(10) documento, domicilio, [codigo postal], nombre, [Fecha Ingreso]
FROM Estudiantes
ORDER BY [Fecha Ingreso];

-- Nombre, apellido y documento de identidad de los docentes y tutores que tienen asignaturas “UX”. 

SELECT apellido, nombre, documento
FROM Staff
WHERE Asignatura IN ( SELECT Asignaturas.AsignaturasID FROM Asignaturas WHERE nombre LIKE '%ux%' );

/* Se calcula el 25% de aumento para: las asignaturas del área de marketing de la jornada mañana. El nuevo costo esta en decimal con 3 digitos. 
Se renombra el calculo del porcentaje como porcentaje y la suma del costo mas el porcentaje por NuevoCosto.*/

SELECT *, ROUND((costo * 1.25),3) AS NuevoCosto
FROM asignaturas
WHERE jornada = 'manana' AND Area = 2;

/* Se indica por jornada, la cantidad de docentes que dictan como cant_docentes y se suman los costos para las asignaturas de desarrollo web como suma_total. 
El resultado contiene todos los valores registrados en la primera tabla. */

SELECT Asignaturas.jornada, COUNT(staff.DocentesID) cant_docentes, SUM(Asignaturas.Costo) suma_total
FROM staff	
LEFT JOIN Asignaturas
ON Asignaturas.asignaturasid = Staff.Asignatura
WHERE Asignaturas.Area = 3
GROUP BY Jornada;

/* Se requiere saber el id del encargado, el nombre, el apellido y cuántos son los docentes que tiene asignados cada encargado. 
Luego se filtran los encargados que tienen como resultado 0 ya que son los encargados que NO tienen asignado un docente.*/

SELECT Encargado.Encargado_ID, Encargado.Nombre, Encargado.Apellido, count(Staff.DocentesID) as cant_docentes
FROM Encargado
INNER JOIN staff
ON Encargado.Encargado_ID = Staff.Encargado
GROUP BY encargado.Encargado_ID, Encargado.Nombre, Encargado.Apellido
HAVING COUNT(Staff.DocentesID) != 0;

-- Datos de asignaturas que no tienen un docente asignado.

SELECT * 
FROM Asignaturas
INNER JOIN Staff
ON Staff.Asignatura = Asignaturas.AsignaturasID;

/*Se quiere conocer la siguiente información de los docentes:
El nombre completo, como NombresCompletos, el documento, meses de ingreso como meses_ingreso, 
el nombre del encargado como NombreEncargado,
el tefelono del encargado como telefonoEncargado,
el nombre del curso o carrera,
la jornada y el nombre del área.
Solo se desean visualizar los que llevan más de 3 meses.
Ordenado de mayor a menor.*/

SELECT 
	CONCAT(staff.Apellido, staff.Nombre, ' ') nombresCompletos, Staff.Documento, DATEDIFF(MONTH, Staff.[Fecha Ingreso], '2023-05-29') meses_ingreso,
	Encargado.Nombre, Encargado.Telefono AS telefonoEncargado,
	Asignaturas.nombre, Asignaturas.Jornada, Asignaturas.Area
FROM Staff
INNER JOIN encargado
	ON staff.encargado = encargado.encargado_id
INNER JOIN Asignaturas
	ON Staff.Asignatura = Asignaturas.AsignaturasID
WHERE DATEDIFF(MONTH, Staff.[Fecha Ingreso], '2023-05-29') > 3
ORDER BY meses_ingreso;

 /* Por medio de la fecha de ingreso de los estudiantes se identifica cantidad total de estudiantes.
Se muestranr los periodos de tiempo separados por año, mes y día, y se presenta la información ordenada por la fecha que más ingresaron estudiantes.
*/

SELECT YEAR([Fecha Ingreso]) año, MONTH([Fecha Ingreso]) mes, DAY([fecha ingreso]) dia, COUNT(EstudiantesID) cant_estudiantes
FROM Estudiantes
GROUP BY YEAR([Fecha Ingreso]), MONTH([Fecha Ingreso]), DAY([fecha ingreso])
ORDER BY cant_estudiantes DESC;

/*
Análisis de encargados con más docentes a cargo: 
Top 10 de los encargados que tiene más docentes a cargo, se filtran solo los que tienen a cargo docentes. 
Ordenar de mayor a menor para poder tener el listado correctamente.
*/

SELECT TOP(10) encargado.Encargado_ID, encargado.Tipo, COUNT(Staff.DocentesID) AS cant_docentes
FROM Encargado
INNER JOIN Staff
ON Encargado.Encargado_ID = Staff.Encargado
GROUP BY Encargado.Encargado_ID, encargado.Tipo
HAVING Encargado.Tipo NOT LIKE '%tutor%'
ORDER  BY cant_docentes DESC;

/*
Análisis de profesiones con más estudiantes: 
Profesión y la cantidad de estudiantes que la ejercen, se muestra el listado solo de las profesiones que tienen más de 5 estudiantes.
Ordenado de mayor a menor por la profesión que tenga más estudiantes.
*/

SELECT profesiones.ProfesionesID, Profesiones.Profesiones, COUNT(Estudiantes.Profesion) AS cant_estudiantes
FROM Profesiones
INNER JOIN Estudiantes
ON Profesiones.ProfesionesID = Estudiantes.Profesion
GROUP BY Profesiones.ProfesionesID, Profesiones.Profesiones
HAVING COUNT(Estudiantes.Profesion) > 5
ORDER BY cant_estudiantes desc;

--Análisis encargado tutores jornada noche: nombre del encargado, el documento de identidad, el número de la camada y la fecha de ingreso del tutor. De mayor a menor.

SELECT Encargado.Nombre, Encargado.Documento, REPLACE(Staff.Camada,'camada', '') camada, Staff.[Fecha Ingreso]
FROM Encargado
INNER JOIN Staff
ON Encargado.Encargado_ID = Staff.Encargado
ORDER BY camada desc;

/* Análisis asignaturas mayor al promedio: se muestra el nombre de la asignatura, el costo de la asignatura y el promedio del costo de las asignaturas por área. 
Una vez obtenido el promedio se visualiza solo las carreras que se encuentran por encima del promedio. 
*/

SELECT Area.Nombre, Asignaturas.Nombre, NULL AS promedio
FROM Asignaturas
INNER JOIN Area
ON Asignaturas.Area = Area.AreaID
GROUP BY Asignaturas.Nombre, Area.Nombre
UNION 
SELECT Area.Nombre, Asignaturas.Nombre, AVG(Asignaturas.Costo) AS promedio
FROM Asignaturas
INNER JOIN Area ON Asignaturas.Area = Area.AreaID
GROUP BY Asignaturas.Nombre, Area.Nombre;

/*
Análisis aumento de salario docente: 
Se muestra nombre, documento de identidad, el área, la asignatura y el aumento del salario del docente. Todas las áreas tienen un porcentaje distinto, Marketing-17%, Diseño-20%, Programación-23%, Producto-13%, Data-15%, Herramientas 8%
*/

SELECT CONCAT(Staff.Nombre, ' ' + Staff.Apellido) AS docente, Staff.Documento, Staff.Asignatura, Asignaturas.Nombre AS asignatura, area.Nombre AS area, Asignaturas.Costo * (
	CASE 
		WHEN Area.AreaID = 1 THEN 1.2
		WHEN Area.areaid = 2 THEN 1.17 
		WHEN Area.AreaID = 3 THEN 2.3
		WHEN Area.AreaID = 4 THEN 1.3
		WHEN Area.areaid = 5 THEN 1.5 
		WHEN Area.AreaID = 6 THEN 0.8
	end) AS salario
FROM Asignaturas
INNER JOIN Staff
ON Asignaturas.AsignaturasID = Staff.Asignatura
INNER JOIN Area
ON Asignaturas.Area = Area.AreaID;

/* Análisis de docentes por camada/comisión: 
Número de documento de identidad, nombre del docente y camada, para identificar la camada mayor y la menor según el número de la camada. 
Número de documento de identidad, nombre de docente y camada para identificar la camada con fecha de ingreso, Mayo 2021. 
Se agrega un campo indicador que informe cuáles son los registros 'mayor o menor' y los que son 'mayo 2021' y se ordena el listado de menor a mayor por camada.
*/

SELECT Staff.Nombre, Staff.Apellido, Staff.Documento, Staff.Camada, Staff.[Fecha Ingreso], 'mayor' 
FROM Staff
WHERE Camada = ( SELECT MAX(Camada) FROM Staff )
UNION
SELECT Staff.Nombre, Staff.Apellido, Staff.Documento, Staff.Camada, Staff.[Fecha Ingreso], 'menor' 
FROM Staff
WHERE Camada = ( SELECT MIN(Camada) FROM Staff )
UNION
SELECT Staff.Nombre, Staff.Apellido, Staff.Documento, Staff.Camada, Staff.[Fecha Ingreso], 'mayo' 
FROM Staff
WHERE [Fecha Ingreso] IN ( SELECT [Fecha Ingreso] FROM Staff WHERE [Fecha Ingreso] LIKE '%05%');
